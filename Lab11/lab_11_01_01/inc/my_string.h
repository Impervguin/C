#ifndef MY_STRING_H__
#define MY_STRING_H__

#include <stddef.h>

/**
 * @brief Функция для записи форматированной строки в буфер.
 * Реализует только спецификаторы %llx и %s
 * При n == 0 не записывает ничего в буфер и только возвращает размер ожидаемой строки.
 * Функция записывает посимвольно все в буфер, пока не встретит ошибку или не выполнит форматированную строку.
 * При нехватке размера буфера n, запишет сколько можно в строку и вернет размер ожидаемой строки.
 * @param [out] s - Буфер
 * @param [in] n - Размер буфера
 * @param [in] format - Форматированная строка
 * @param [in] ... - Параметры форматированной строки
 * @return int - Количество записанных символов без NULL, В случае ошибки - -1.
 */
int my_snprintf(char *s, size_t n, const char *format, ...);

/**
 * @brief Функция для сравнения первых n-символов строк
 * 
 * @param [in] s1 - Строка 1
 * @param [in] s2 - Строка 2
 * @param [in] n - Макс. размер строк.
 * @return int >0, если 1 > 2, 0 если 1 == 2, иначе <0
 */
int my_strncmp(const char *s1, const char *s2, size_t n);

/**
 * @brief Функция для получения длины строки.
 * 
 * @param [in] s - Строка.
 * @return size_t - Размер строки.
 */
size_t my_strlen(const char *s);

#endif // STRING_H__
